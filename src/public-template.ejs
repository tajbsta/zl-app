<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title><%= htmlWebpackPlugin.options.title %></title>
		<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
		<meta name="mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="description" content="Explore live animal experiences hosted by nature experts. Streaming 24/7 from the world's top zoos. FREE access now open.">
		<meta property="og:image" content="https://photos.zoolife.tv/assets/seo.png" />
		<link rel="apple-touch-icon" href="/assets/icons/apple-touch-icon.png">
		<link rel="manifest" href="<%= htmlWebpackPlugin.files.publicPath %>manifest.json">
		<% if (htmlWebpackPlugin.options.manifest.theme_color) { %>
			<meta name="theme-color" content="<%= htmlWebpackPlugin.options.manifest.theme_color %>">
		<% } %>
		<% const loadManifest = htmlWebpackPlugin.options.createLoadManifest(compilation.assets, webpack.namedChunkGroups);%>
		<% const filesRegexp = htmlWebpackPlugin.options.inlineCss ? /\.(chunk\.\w{5}\.css|js)$/ : /\.(css|js)$/;%>
		<% for (const file in loadManifest[htmlWebpackPlugin.options.url]) { %>
			<% if (htmlWebpackPlugin.options.preload && file && file.match(filesRegexp) && !(file.startsWith('bundle') && file.endsWith('.js'))) { %>
				<% /* crossorigin for main bundle as that is loaded from `<script type=module` tag, other lazy loaded bundles are from webpack so its not needed */ %>
				<link rel="preload" href="<%= htmlWebpackPlugin.files.publicPath + file %>" as="<%= file.match(/\.css$/)?'style':'script' %>" <%= file.match(/public-bundle\.\w{5}\.esm\.js$/)?'crossorigin="anonymous"':'' %>>
			<% } %>
		<% } %>
		<script>
			!function(f,b,e,v,n,t,s)
			{if(f.fbq)return;n=f.fbq=function(){n.callMethod?
			n.callMethod.apply(n,arguments):n.queue.push(arguments)};
			if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
			n.queue=[];t=b.createElement(e);t.async=!0;
			t.src=v;s=b.getElementsByTagName(e)[0];
			s.parentNode.insertBefore(t,s)}(window, document,'script',
			'https://connect.facebook.net/en_US/fbevents.js');
			fbq('init', '<%= htmlWebpackPlugin.options.pixelId %>');
			fbq('track', 'PageView');
			</script>
			<noscript><img height="1" width="1" style="display: none"
			src="https://www.facebook.com/tr?id=<%= htmlWebpackPlugin.options.pixelId %>&ev=PageView&noscript=1"
			/></noscript>


		<script src="https://www.googleoptimize.com/optimize.js?id=<%= htmlWebpackPlugin.options.optimizeId %>"></script>
		<script async src="https://www.googletagmanager.com/gtag/js?id=<%= htmlWebpackPlugin.options.gaId %>"></script>

<script>
			window.dataLayer = window.dataLayer || [];
			gtag = function () { dataLayer.push(arguments); }
			gtag('js', new Date());

			gtag('config', '<%= htmlWebpackPlugin.options.gaId %>', { 'optimize_id': '<%= htmlWebpackPlugin.options.optimizeId %>'});
		</script>
		<script type="text/javascript"> (function (g, i, f, t, u, p, s) { g[u] = g[u] || function() { (g[u].q = g[u].q || []).push(arguments) }; p = i.createElement(f); p.async = 1; p.src = t; s = i.getElementsByTagName(f)[0]; s.parentNode.insertBefore(p, s); })(window, document, "script", "https://cdn.giftup.app/dist/gift-up.js", "giftup"); </script>
	</head>
	<body>
		<%= htmlWebpackPlugin.options.ssr() %>
		<script type="__PREACT_CLI_DATA__">
			<%= encodeURI(JSON.stringify(htmlWebpackPlugin.options.CLI_DATA)) %>
		</script>
		<% if (webpack.assets.filter(entry => entry.name.match(/public-bundle(\.\w{5})?.esm.js$/)).length > 0) { %>
			<% /* Fix for safari < 11 nomodule bug. TODO: Do the following only for safari. */ %>
			<script nomodule>!function(){var e=document,t=e.createElement("script");if(!("noModule"in t)&&"onbeforeload"in t){var n=!1;e.addEventListener("beforeload",function(e){if(e.target===t)n=!0;else if(!e.target.hasAttribute("nomodule")||!n)return;e.preventDefault()},!0),t.type="module",t.src=".",e.head.appendChild(t),t.remove()}}();</script>
			<script crossorigin="anonymous" src="<%= htmlWebpackPlugin.files.publicPath %><%= webpack.assets.filter(entry => entry.name.match(/public-bundle(\.\w{5})?.esm.js$/))[0].name %>" type="module"></script>
			<%
				/*Fetch and Promise polyfills are not needed for browsers that support type=module
				Please re-evaluate below line if adding more polyfills.*/
			%>
			<script nomodule src="<%= htmlWebpackPlugin.files.chunks["polyfills"].entry %>"></script>
			<script nomodule defer src="<%= htmlWebpackPlugin.files.chunks['public-bundle'].entry %>"></script>
		<% } else { %>
			<script <%= htmlWebpackPlugin.options.scriptLoading %>  src="<%= htmlWebpackPlugin.files.chunks['public-bundle'].entry %>"></script>
			<script nomodule src="<%= htmlWebpackPlugin.files.chunks["polyfills"].entry %>"></script>
		<% } %>
	</body>
</html>
